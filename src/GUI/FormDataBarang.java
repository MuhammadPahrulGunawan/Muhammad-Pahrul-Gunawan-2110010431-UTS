/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import Koneksi.koneksi;
import javax.swing.*;
import java.awt.*;
import javax.swing.text.*;
import javax.swing.plaf.basic.BasicComboBoxRenderer;

/**
 *
 * @author ACER
 */
public class FormDataBarang extends javax.swing.JFrame {
    
    private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;

    /**
     * Creates new form FormDataBarang
     */
    public FormDataBarang() {
        initComponents();
        
        // Set transparansi untuk JTextField
        
        //Menghilangkan Bacground JTextField pada TeksKode Barang dan memberi border 1 di bawah
        KodeBarang.setOpaque(false);
        KodeBarang.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLUE));
        KodeBarang.setForeground(Color.BLACK);
        //Menghilangkan Bacground JTextField pada Teks Nama Barang dan memberi border 1 di bawah
        NamaBarang.setOpaque(false);
        NamaBarang.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLUE));
        NamaBarang.setForeground(Color.BLACK);
        //Menghilangkan Bacground JTextField pada Teks Merek dan memberi border 1 di bawah
        Merek.setOpaque(false);
        Merek.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLUE));
        Merek.setForeground(Color.BLACK);
        //Menghilangkan Bacground JTextField pada Teks Ukuran dan memberi border 1 di bawah
        Ukuran.setOpaque(false);
        Ukuran.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLUE));
        Ukuran.setForeground(Color.BLACK);
        //Menghilangkan Bacground JTextField pada Cari Barang dan memberi border 1 di bawah
        Cari.setOpaque(false);
        Cari.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLUE));
        Cari.setForeground(Color.BLACK);
        
        //Membuat tampilan jadi layar penuh
        this.setExtendedState(MAXIMIZED_BOTH);
        
        kosong();
        aktif();
        datatable();
    }

        protected void kosong(){
        // Mengosongkan beberapa field input pada antarmuka pengguna
        KodeBarang.setText("");
        NamaBarang.setText("");
        Merek.setText("");
        Ukuran.setText("");
        Cari.setText("");
        Kategori.setSelectedItem(null);
    }

        protected void aktif(){
        // Mengatur fokus ke field input KodeBarang dan mengosongkan pilihan pada Kategori
        KodeBarang.requestFocus();
        Kategori.setSelectedItem(null);
    }

        protected void datatable(){
        // Membuat model tabel (tabmode) dan mengisi tabel dengan data dari database berdasarkan kriteria pencarian
        Object[] Baris = {"Kode Barang", "Nama Barang", "Kategori Barang", "Merek", "Ukuran"};
        tabmode = new DefaultTableModel(null, Baris);
        String cariitem = Cari.getText();
        try{
        // Membuat query SQL untuk mengambil data barang berdasarkan Kode atau Nama Barang yang sesuai dengan kriteria pencarian
        String sql = "SELECT * FROM mst_barang WHERE kd_barang like '%"+cariitem+"%' or nama_barang like '%"+cariitem+"%' order by kd_barang asc";
        Statement stat = conn.createStatement();
        ResultSet hasil = stat.executeQuery(sql);
        // Mengisi model tabel dengan data hasil query
        while(hasil.next()){
            tabmode.addRow(new Object[]{
                hasil.getString(1),
                hasil.getString(2),
                hasil.getString(3),
                hasil.getString(4),
                hasil.getString(5)
            });
        }
        // Menetapkan model tabel ke komponen tabel (TabelBarang) pada antarmuka pengguna
        TabelBarang.setModel(tabmode);
    } catch (Exception e) {
        // Menampilkan pesan kesalahan jika terjadi exception
        JOptionPane.showMessageDialog(null, "Data gagal di panggil"+e);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        Idinv = new javax.swing.JLabel();
        Idinv1 = new javax.swing.JLabel();
        Idinv2 = new javax.swing.JLabel();
        Idinv3 = new javax.swing.JLabel();
        Idinv4 = new javax.swing.JLabel();
        KodeBarang = new javax.swing.JTextField();
        NamaBarang = new javax.swing.JTextField();
        Kategori = new javax.swing.JComboBox<>();
        Ukuran = new javax.swing.JTextField();
        Merek = new javax.swing.JTextField();
        btnsimpan2 = new javax.swing.JButton();
        btnubah2 = new javax.swing.JButton();
        btnhapus2 = new javax.swing.JButton();
        btnbatal2 = new javax.swing.JButton();
        btnkeluar2 = new javax.swing.JButton();
        Idinv5 = new javax.swing.JLabel();
        Cari = new javax.swing.JTextField();
        btncari = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelBarang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel1.setkEndColor(new java.awt.Color(255, 153, 51));
        kGradientPanel1.setkStartColor(new java.awt.Color(209, 206, 209));

        jPanel2.setBackground(new java.awt.Color(111, 110, 164));

        jLabel18.setFont(new java.awt.Font("Lucida Fax", 1, 24)); // NOI18N
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/MenuDataBarang.png"))); // NOI18N
        jLabel18.setText("DATA BARANG");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addGap(0, 653, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        Idinv.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Idinv.setText("NAMA BARANG");

        Idinv1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Idinv1.setText("KATEGORI BARANG");

        Idinv2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Idinv2.setText("MEREK");

        Idinv3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Idinv3.setText("KODE BARANG");

        Idinv4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Idinv4.setText("UKURAN");

        KodeBarang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        KodeBarang.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        KodeBarang.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        NamaBarang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        NamaBarang.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NamaBarang.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        Kategori.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Kategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- ELEKTRONIK -", "- FURNITURE -", "- SERVIS -", "- LOGISTIK -", "- PERALATAN MEDIS -", "- DLL -" }));
        Kategori.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        Ukuran.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Ukuran.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Ukuran.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        Merek.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Merek.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Merek.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btnsimpan2.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        btnsimpan2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/btnSIMPAN.png"))); // NOI18N
        btnsimpan2.setText("SIMPAN");
        btnsimpan2.setBorder(null);
        btnsimpan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsimpan2ActionPerformed(evt);
            }
        });

        btnubah2.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        btnubah2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/UBAH.png"))); // NOI18N
        btnubah2.setText("UBAH");
        btnubah2.setBorder(null);
        btnubah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnubah2ActionPerformed(evt);
            }
        });

        btnhapus2.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        btnhapus2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/HAPUS.png"))); // NOI18N
        btnhapus2.setText("HAPUS");
        btnhapus2.setBorder(null);
        btnhapus2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapus2ActionPerformed(evt);
            }
        });

        btnbatal2.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        btnbatal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/BATAL.png"))); // NOI18N
        btnbatal2.setText("BATAL");
        btnbatal2.setBorder(null);
        btnbatal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbatal2ActionPerformed(evt);
            }
        });

        btnkeluar2.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        btnkeluar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/KELUAR.png"))); // NOI18N
        btnkeluar2.setText("KELUAR");
        btnkeluar2.setBorder(null);
        btnkeluar2.setOpaque(true);
        btnkeluar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkeluar2ActionPerformed(evt);
            }
        });

        Idinv5.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Idinv5.setText("list Data Barang :");

        Cari.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Cari.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        Cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CariKeyPressed(evt);
            }
        });

        btncari.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        btncari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/CARI.png"))); // NOI18N
        btncari.setText("CARI");
        btncari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncariActionPerformed(evt);
            }
        });

        TabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TabelBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelBarang);

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(KodeBarang)
                    .addComponent(NamaBarang)
                    .addComponent(Kategori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Ukuran)
                    .addComponent(Merek)
                    .addComponent(btnkeluar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(btnsimpan2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnubah2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnhapus2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnbatal2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(Cari, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btncari, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Idinv)
                            .addComponent(Idinv3)
                            .addComponent(Idinv1)
                            .addComponent(Idinv4)
                            .addComponent(Idinv2)
                            .addComponent(Idinv5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Idinv3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(KodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Idinv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Idinv1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Idinv4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Ukuran, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Idinv2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Merek, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnsimpan2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnubah2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnhapus2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnbatal2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(btnkeluar2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(Idinv5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btncari, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Cari))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 112, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsimpan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsimpan2ActionPerformed

    String kodeBarang = KodeBarang.getText();
    String namaBarang = NamaBarang.getText();
    String kategori = Kategori.getSelectedItem() != null ? Kategori.getSelectedItem().toString() : "";
    String merek = Merek.getText();
    String ukuran = Ukuran.getText();

    // Periksa apakah KodeBarang, NamaBarang, Kategori, Merek, atau Ukuran kosong
    if (kodeBarang.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Kode Barang Kosong");
        return; // Keluar dari metode jika KodeBarang kosong
    }

    if (namaBarang.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Nama Barang Kosong");
        return; // Keluar dari metode jika NamaBarang kosong
    }

    if (kategori.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Kategori Kosong");
        return; // Keluar dari metode jika Kategori kosong
    }

    if (merek.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Merek Kosong");
        return; // Keluar dari metode jika Merek kosong
    }

    if (ukuran.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Ukuran Kosong");
        return; // Keluar dari metode jika Ukuran kosong
    }

    // Jika semua input sudah diisi, lanjutkan penyimpanan
    String sql = "INSERT INTO mst_barang VALUES (?,?,?,?,?)";
    try {
        PreparedStatement stat = conn.prepareStatement(sql);
        stat.setString(1, kodeBarang);
        stat.setString(2, namaBarang);
        stat.setString(3, kategori);
        stat.setString(4, merek);
        stat.setString(5, ukuran);
        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
        kosong();
        KodeBarang.requestFocus();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan" + e);
    }
    datatable();
    }//GEN-LAST:event_btnsimpan2ActionPerformed

    private void btnubah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnubah2ActionPerformed

       // Memeriksa apakah baris tertentu pada tabel telah dipilih
        int selectedRow = TabelBarang.getSelectedRow();
        if (selectedRow == -1) {
        // Menampilkan pesan jika tidak ada baris yang dipilih
        JOptionPane.showMessageDialog(null, "Pilih data yang akan diubah");
        return;
      }
        // Menyiapkan query SQL untuk mengupdate data barang berdasarkan Kode Barang
        String sql = "UPDATE mst_barang SET nama_barang=?, kategori_barang=?, merek=?, ukuran=? WHERE kd_barang='"+KodeBarang.getText()+"'";
        try {
        // Membuat objek PreparedStatement untuk mengeksekusi query SQL
        PreparedStatement stat = conn.prepareStatement(sql);
        // Mengatur nilai parameter pada query SQL berdasarkan input dari pengguna
        stat.setString(1, NamaBarang.getText());
        stat.setString(2, Kategori.getSelectedItem().toString());
        stat.setString(3, Merek.getText());
        stat.setString(4, Ukuran.getText());

        // Mengeksekusi query SQL untuk mengupdate data
        stat.executeUpdate();
    
        // Menampilkan pesan sukses setelah data berhasil diubah
        JOptionPane.showMessageDialog(null, "Data berhasil diubah");
    
        // Mengosongkan input fields dan mengatur fokus ke KodeBarang
        kosong();
        KodeBarang.requestFocus();
    }   catch(SQLException e){
        // Menampilkan pesan kesalahan jika terjadi exception saat menjalankan query SQL
        JOptionPane.showMessageDialog(null, "Data gagal diubah"+e);
    }

        // Memanggil metode datatable() untuk memperbarui tampilan tabel setelah perubahan data
        datatable();
    }//GEN-LAST:event_btnubah2ActionPerformed

    private void btnhapus2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapus2ActionPerformed
        // Menampilkan dialog konfirmasi untuk menghapus data
        int ok = JOptionPane.showConfirmDialog(null, "Apakah anda yakin menghapus data ini?", "konfirm dialog", JOptionPane.YES_NO_OPTION);

        // Memeriksa apakah pengguna menekan tombol "Yes" pada dialog konfirmasi
        if(ok==0){
        // Menyiapkan query SQL untuk menghapus data barang berdasarkan Kode Barang
        String sql = "DELETE FROM mst_barang WHERE kd_barang='"+KodeBarang.getText()+"'";
    try {
        // Membuat objek PreparedStatement untuk mengeksekusi query SQL
        PreparedStatement stat = conn.prepareStatement(sql);
        // Mengeksekusi query SQL untuk menghapus data
        stat.executeUpdate();
        // Menampilkan pesan sukses setelah data berhasil dihapus
        JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
        // Mengosongkan input fields dan mengatur fokus ke KodeBarang
        kosong();
        KodeBarang.requestFocus();
    } catch(SQLException e){
        // Menampilkan pesan kesalahan jika terjadi exception saat menjalankan query SQL
        JOptionPane.showMessageDialog(null, "Data gagal dihapus"+e);
    }
            // Memanggil metode datatable() untuk memperbarui tampilan tabel setelah penghapusan data
            datatable();
        }

    }//GEN-LAST:event_btnhapus2ActionPerformed

    private void btnbatal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbatal2ActionPerformed
        // Memanggil Metode kosong(); untuk membatalkan inputan
        kosong();
        
        datatable();
    }//GEN-LAST:event_btnbatal2ActionPerformed

    private void btnkeluar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkeluar2ActionPerformed
        dispose();
    }//GEN-LAST:event_btnkeluar2ActionPerformed

    private void btncariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncariActionPerformed
        // Memanggil metode datatable() untuk menampilkan data sesuai dengan kriteria pencarian
        datatable();
    }//GEN-LAST:event_btncariActionPerformed

    private void TabelBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelBarangMouseClicked
        // Mengambil indeks baris yang dipilih dalam tabel
        int bar = TabelBarang.getSelectedRow();

        // Mengambil nilai dari setiap kolom dalam baris yang dipilih
        String a = tabmode.getValueAt(bar, 0).toString(); // Nilai kolom 0 (Kode Barang)
        String b = tabmode.getValueAt(bar, 1).toString(); // Nilai kolom 1 (Nama Barang)
        String c = tabmode.getValueAt(bar, 2).toString(); // Nilai kolom 2 (Kategori Barang)
        String d = tabmode.getValueAt(bar, 3).toString(); // Nilai kolom 3 (Merek)
        String e = tabmode.getValueAt(bar, 4).toString(); // Nilai kolom 4 (Ukuran)

        // Menetapkan nilai-nilai yang diambil ke komponen-komponen input pada antarmuka pengguna
        KodeBarang.setText(a);
        NamaBarang.setText(b);
        Kategori.setSelectedItem(c);
        Merek.setText(d);
        Ukuran.setText(e);

    }//GEN-LAST:event_TabelBarangMouseClicked

    private void CariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CariKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            datatable();
       }
    }//GEN-LAST:event_CariKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     try {
    // Iterasi melalui semua look and feel yang terinstall
    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        // Jika ditemukan look and feel dengan nama "Nimbus", atur antarmuka pengguna menggunakan look and feel tersebut
        if ("Nimbus".equals(info.getName())) {
            javax.swing.UIManager.setLookAndFeel(info.getClassName());
            break;
        }
    }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            // Tangani exception yang mungkin terjadi selama proses mengatur look and feel
        java.util.logging.Logger.getLogger(FormInventarisMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDataBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cari;
    private javax.swing.JLabel Idinv;
    private javax.swing.JLabel Idinv1;
    private javax.swing.JLabel Idinv2;
    private javax.swing.JLabel Idinv3;
    private javax.swing.JLabel Idinv4;
    private javax.swing.JLabel Idinv5;
    private javax.swing.JComboBox<String> Kategori;
    private javax.swing.JTextField KodeBarang;
    private javax.swing.JTextField Merek;
    private javax.swing.JTextField NamaBarang;
    private javax.swing.JTable TabelBarang;
    private javax.swing.JTextField Ukuran;
    private javax.swing.JButton btnbatal2;
    private javax.swing.JButton btncari;
    private javax.swing.JButton btnhapus2;
    private javax.swing.JButton btnkeluar2;
    private javax.swing.JButton btnsimpan2;
    private javax.swing.JButton btnubah2;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    // End of variables declaration//GEN-END:variables
}
